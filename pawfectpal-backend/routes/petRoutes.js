const express = require('express');
const router = express.Router();
const { authenticateUser } = require('../middleware/authentication');
const database = require('../server');


// GET PET from the database
router.get('/GET/api/pet', authenticateUser, (req, res) => {
  const userId = req.user.uid;
  const petsRef = database.ref(`pets/${userId}`);
  petsRef.on('value', (snapshot) => {
    const pets = snapshot.val();
    res.json(pets);
  }, (error) => {
    console.error('Error fetching pets:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  });
});

router.post('/POST/api/addPet', authenticateUser, (req, res) => {
  const userId = req.user.uid;
  const petData = req.body.petData; // Assuming the pet data is provided in the request body
  const petsRef = database.ref(`pets/${userId}`);
  const newPetRef = petsRef.push(); // Use push to generate a new reference with a unique key
  const newPetKey = newPetRef.key; // Get the unique key generated by push

  newPetRef.set(petData) // Use set() from the newPetRef to save the data at the specified reference
    .then(() => {
      res.json({ message: 'Pet created successfully', petId: newPetKey });
    })
    .catch((error) => {
      console.error('Error creating pet:', error);
      res.status(500).json({ error: 'Internal Server Error' });
    });
});


// PUT EDIT PET in the database
router.put('/PUT/api/editPet/:petName', authenticateUser, (req, res) => {
  const userId = req.user.uid;
  const petName = req.params.petName;
  const updatedPet = req.body;
  const petsRef = database.ref(`pets/${userId}`);
  const petRef = petsRef.child(petName); // Assuming petName is the key of the pet to be updated

  petRef.update(updatedPet)
    .then(() => {
      res.json({ message: 'Pet updated successfully' });
    })
    .catch((error) => {
      console.error('Error updating pet:', error);
      res.status(500).json({ error: 'Internal Server Error' });
    });
});

module.exports = router;
